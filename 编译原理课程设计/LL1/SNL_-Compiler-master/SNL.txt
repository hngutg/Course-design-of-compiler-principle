Program		::=	ProgramHead  DeclarePart ProgramBody.
ProgramHead	::=	PROGRAM	ProgramName
ProgramName     ::=	ID
DeclarePart	::=	TypeDec VarDec ProcDec
TypeDec		::=	KONG | TypeDeclaration		
TypeDeclaration	::= 	TYPE	TypeDecList		
TypeDecList	::=	TypeId = TypeName ; TypeDecMore
TypeDecMore	::= 	KONG | TypeDecList		    	
TypeId		::= 	ID
TypeName	::= 	BaseType | StructureType | ID		
BaseType	::=	INTEGER | CHAR
StructureType	::= 	ArrayType | RecType						
ArrayType	::=	ARRAY [Low..Top ] OF BaseType
Low          	::=  	INTC
Top             ::=	INTC
RecType		::=	RECORD  FieldDecList END
FieldDecList	::=	BaseType  IdList ; FieldDecMore | ArrayType IdList ; FieldDecMore
FieldDecMore	::=	KONG | FieldDecList
IdList		::= 	ID  IdMore				
IdMore		::=	KONG | , IdList
VarDec		::=	KONG | VarDeclaration			
VarDeclaration	::=	VAR  VarDecList			
VarDecList	::=	TypeName VarIdList ;  VarDecMore
VarDecMore	::= 	KONG|VarDecList
VarIdList	::=	ID  VarIdMore	
VarIdMore	::=	KONG | , VarIdList
ProcDec		::=	KONG | ProcDeclaration		  	
ProcDeclaration	::=	PROCEDURE ProcName ( ParamList )  ; ProcDecPart ProcBody ProcDecMore 
ProcDecMore	::=	KONG | ProcDeclaration	
ProcName	::=	ID
ParamList	::=	KONG | ParamDecList 	
ParamDecList	::=	Param  ParamMore
ParamMore	::=	KONG| ; ParamDecList			
Param		::=	TypeName  FormList | VAR TypeName  FormList	
FormList	::= 	ID  FidMore		
FidMore		::=	KONG | , FormList
ProcDecPart	::=	DeclarePart
ProcBody	::=	ProgramBody	
ProgramBody	::=	BEGIN  StmList END
StmList		::=	Stm StmMore	
StmMore		::=	KONG | ; StmList
Stm		::=	ConditionalStm | LoopStm | InputStm |OutputStm | ReturnStm | ID AssCall	 
AssCall		::=  	AssignmentRest | CallStmRest			
AssignmentRest	::= 	VariMore := Exp	
ConditionalStm	::=	IF RelExp THEN StmList ELSE StmList  FI
LoopStm		::=	WHILE  RelExp DO StmList ENDWH				
InputStm	::=	READ ( Invar) 	
Invar 		::=	ID			
OutputStm	::=	WRITE( Exp )
ReturnStm	::=	RETURN	
CallStmRest	::=	( ActParamList )	
ActParamList	::=	KONG | Exp  ActParamMore
ActParamMore	::=	KONG | ,  ActParamList
RelExp		::= 	Exp  OtherRelE
OtherRelE	::= 	CmpOp   Exp 		
Exp		::=  	Term   OtherTerm
OtherTerm	::=  	KONG | AddOp   Exp
Term		::=   	Factor   OtherFactor
OtherFactor	::=	KONG |  MultOp  Term
Factor		::=   	(  Exp  ) |  INTC |  Variable
Variable	::=   	ID   VariMore
VariMore	::=	KONG | [ Exp ] | .  FieldVar
FieldVar	::=  	ID   FieldVarMore	
FieldVarMore	::= 	KONG | [ Exp  ]				
CmpOp		::=  	< |  =	
AddOp		::=  	+ |  -
MultOp		::=  	* |  /
